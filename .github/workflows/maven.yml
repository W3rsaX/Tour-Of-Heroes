# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven
on: [push, pull_request]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'oracle'
      - name: Run Unit Tests
        working-directory: ./spring-app-backend
        run: mvn test -Dtest=**/*UnitTest* 

  integration-tests:
    needs: unit-tests  
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'oracle'
      - name: Run Integration Tests
        working-directory: ./spring-app-backend
        run: mvn test -Dtest=**/*IntegrationTest*

  e2e-tests:
    needs: integration-tests 
    runs-on: windows-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'oracle'

      - name: Set up CI profile config
        working-directory: ./spring-app-backend
        run: |
          cat <<EOF > src/main/resources/application-ci.properties
          spring.datasource.url=jdbc:postgresql://localhost:5432/testdb
          spring.datasource.username=testuser
          spring.datasource.password=testpass
          spring.data.redis.host=localhost
          spring.data.redis.port=6379
          EOF
          
      - name: Start Spring Boot app
        working-directory: ./spring-app-backend
        run: |
          mvn spring-boot:run -Dspring-boot.run.profiles=ci &
          echo "Waiting for app to start..."
          until curl -s http://localhost:8080/actuator/health | grep -q '"status":"UP"'; do
            sleep 2
          done
          
      - name: Run E2E Tests
        working-directory: ./spring-app-backend
        run: mvn test -Dtest=**/*E2ETest* 
        
      - name: Stop Spring Boot app
        working-directory: ./spring-app-backend
        run: |
          pkill -f "spring-boot:run" || echo "App already stopped"
          docker stop postgres redis || echo "Containers already stopped"

